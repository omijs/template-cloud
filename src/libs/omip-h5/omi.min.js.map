{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/style.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/obaa.js","../src/tick.js","../src/observe.js","../src/vdom/component.js","../src/render.js","../src/component.js","../src/define.js","../src/rpx.js","../src/class.js","../src/render-to-string.js","../src/options.js","../src/model-view.js","../src/omi.js"],"names":["VNode","h","nodeName","attributes","lastSimple","child","simple","i","children","EMPTY_CHILDREN","arguments","length","stack","push","pop","String","p","key","options","vnode","toObject","val","TypeError","Object","assign","target","from","symbols","to","s","hasOwnProperty","call","getOwnPropertySymbols","propIsEnumerable","extend","obj","props","applyRef","ref","value","current","isArray","prototype","toString","nProps","result","keys","forEach","cloneElement","slice","ATTR_KEY","component","debounceRendering","defer","rerender","items","enqueueRender","renderComponent","mapping","hydrating","isSameNodeType","node","splitText","_componentConstructor","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","a","b","cssTxt","isSvg","rule","split","map","o","x","trim","replace","Array","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","match","cssText","parentNode","removeChild","setAccessor","name","old","IS_NON_DIMENSIONAL$1","test","oldJson","currentJson","changed","ckey","setStyles","substring","addEventListener","eventProxy","useCapture","touchStart","touchEnd","_listeners","setProperty","removeEventListener","removeAttribute","ns","removeAttributeNS","setAttributeNS","setAttribute","e","this","type","event","___touchY","touches","pageY","Math","abs","changedTouches","pageX","___touchX","document","body","scrollTop","___scrollTop","dispatchEvent","CustomEvent","styleCache","len","item","ctor","attrName","getCtorName","styleId","prefix","css","g0","g1","g2","g3","addStyle","id","ele","appendClass","head","getElementsByTagName","appendChild","someThingStyles","getElementById","textContent","window","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","addStyleToHead","scopedStyle","addScopedAttrStatic","vdom","staticStyleMapping","scoper","diffLevel","c","mounts","isSvgMode","afterMount","constructor","diff","dom","context","mountAll","parent","componentRoot","ret","out","prevSvgMode","vnodeName","buildComponentFromVNode","_component","createTextNode","replaceChild","recollectNodeTree","__omiattr_","vchildren","innerDiffNode","fc","nodeValue","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","__key","vchild","min","undefined","nextSibling","idiff","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","collectComponent","inst","components","Ctor","render","Component","createComponent","list","nextBase","splice","data","fireTick","size","scope","callbacks","nextItem","fn","timeout","nextTickCallback","clearTimeout","proxyUpdate","update","setComponentProps","opts","_disable","install","observe","receiveProps","beforeInstall","prevProps","base","shallowComparison","isChild","previousProps","previousState","isUpdate","skip","initialBase","initialChildComponent","previousContext","rendered","cbase","beforeUpdate","store","prevState","prevContext","beforeRender","scopeHost","scopedCssAttr","getChildContext","toUnmount","childComponent","childProps","getNodeProps","baseParent","SYNC_RENDER","componentRef","t","unshift","_parentComponent","updated","afterUpdate","_renderCallbacks","flushMounts","oldDom","originalComponent","isDirectOwner","unmountComponent","isOwner","inner","uninstall","instance","Constructor","querySelector","empty","merge","firstChild","define","rpx","str","superClass","subClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","hasOwn","argType","classes","arg","_Array$prototype$slic","args","class","extractClass","className","classNames","apply","VOID_ELEMENTS","isLargeString","styleObjToCss","IS_NON_DIMENSIONAL","prop","renderToString","scopedCSS","pretty","indentChar","isComponent","tempCss","cssStr","cssAttr","html","sortAttributes","sort","allAttributes","v","attributeHook","hooked","__html","xml","encodeEntities","sub","indexOf","isVoid","pieces","indent","hasLarge","join","assign$1","createRef","isWeb","root","global","self","propertyIsEnumerable","Element","runListeners","oEvent","iLstId","iElId","oEvtListeners","oListeners","aEls","aEvts","sEventType","fListener","nElIdx","aElListeners","proto","F","Error","usePromise","Promise","__config__","platform","systemVersion","resolve","then","bind","setTimeout","ASYNC_RENDER","obaa","_observe","arr","callback","$observer","eventPropArr","isInArray","$observeProps","$observerPath","isString","watch","propertyChangedHandler","onPropertyChanged","path","propChanged","all","handler","oldValue","rootName","_getRootName","mock","methods","RegExp","cprop","isFunction","toUpperCase","get","currentValue","triggerStr","add","set","exec","elementId","componentChange","every","is","ModelView","_Component","_inherits","ignoreLines","WeElement","defineElement","Omi","version","getHost","module","exports"],"mappings":"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","file":"omi.min.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\nconst EMPTY_CHILDREN = []\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n  let children = EMPTY_CHILDREN,\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children === EMPTY_CHILDREN) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = nodeName\n  p.children = children\n\tp.attributes = attributes == null ? undefined : attributes\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","'use strict'\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined')\n  }\n\n  return Object(val)\n}\n\nexport function assign(target, source) {\n  var from\n  var to = toObject(target)\n  var symbols\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s])\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key]\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from)\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]]\n        }\n      }\n    }\n  }\n\n  return to\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.addEventListener) {\n  var oListeners = {};\n  function runListeners(oEvent) {\n    if (!oEvent) { oEvent = window.event; }\n    for (var iLstId = 0, iElId = 0, oEvtListeners = oListeners[oEvent.type]; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) {\n        for (iLstId; iLstId < oEvtListeners.aEvts[iElId].length; iLstId++) { oEvtListeners.aEvts[iElId][iLstId].call(this, oEvent); }\n        break;\n      }\n    }\n  }\n  Element.prototype.addEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (oListeners.hasOwnProperty(sEventType)) {\n      var oEvtListeners = oListeners[sEventType];\n      for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n        if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n      }\n      if (nElIdx === -1) {\n        oEvtListeners.aEls.push(this);\n        oEvtListeners.aEvts.push([fListener]);\n        this[\"on\" + sEventType] = runListeners;\n      } else {\n        var aElListeners = oEvtListeners.aEvts[nElIdx];\n        if (this[\"on\" + sEventType] !== runListeners) {\n          aElListeners.splice(0);\n          this[\"on\" + sEventType] = runListeners;\n        }\n        for (var iLstId = 0; iLstId < aElListeners.length; iLstId++) {\n          if (aElListeners[iLstId] === fListener) { return; }\n        }\n        aElListeners.push(fListener);\n      }\n    } else {\n      oListeners[sEventType] = { aEls: [this], aEvts: [[fListener]] };\n      this[\"on\" + sEventType] = runListeners;\n    }\n  };\n  Element.prototype.removeEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (!oListeners.hasOwnProperty(sEventType)) { return; }\n    var oEvtListeners = oListeners[sEventType];\n    for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n    }\n    if (nElIdx === -1) { return; }\n    for (var iLstId = 0, aElListeners = oEvtListeners.aEvts[nElIdx]; iLstId < aElListeners.length; iLstId++) {\n      if (aElListeners[iLstId] === fListener) { aElListeners.splice(iLstId, 1); }\n    }\n  };\n}\n\n\nif (typeof Object.create !== 'function') {\n  Object.create = function(proto, propertiesObject) {\n    if (typeof proto !== 'object' && typeof proto !== 'function') {\n      throw new TypeError('Object prototype may only be an Object: ' + proto)\n    } else if (proto === null) {\n      throw new Error(\n        \"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\"\n      )\n    }\n\n    // if (typeof propertiesObject != 'undefined') {\n    //     throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");\n    // }\n\n    function F() {}\n    F.prototype = proto\n\n    return new F()\n  }\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\n  }\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n  if (ref) {\n    if (typeof ref == 'function') ref(value)\n    else ref.current = value\n  }\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\n\nlet usePromise = typeof Promise == 'function'\n\n// for native\nif (\n  typeof document !== 'object' &&\n  typeof global !== 'undefined' &&\n  global.__config__\n) {\n  if (global.__config__.platform === 'android') {\n    usePromise = true\n  } else {\n    let systemVersion =\n      (global.__config__.systemVersion &&\n        global.__config__.systemVersion.split('.')[0]) ||\n      0\n    if (systemVersion > 8) {\n      usePromise = true\n    }\n  }\n}\n\nexport const defer = usePromise\n  ? Promise.resolve().then.bind(Promise.resolve())\n  : setTimeout\n\nexport function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nexport function nProps(props) {\n  if (!props || isArray(props)) return {}\n  const result = {}\n  Object.keys(props).forEach(key => {\n    result[key] = props[key].value\n  })\n  return result\n}","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","// render modes\n\nexport const NO_RENDER = 0\nexport const SYNC_RENDER = 1\nexport const FORCE_RENDER = 2\nexport const ASYNC_RENDER = 3\n\nexport const ATTR_KEY = '__omiattr_'\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n","import options from './options'\nimport { defer } from './util'\nimport { renderComponent } from './vdom/component'\n\n/** Managed queue of dirty components to be re-rendered */\n\nlet items = []\n\nexport function enqueueRender(component) {\n  if (items.push(component) == 1) {\n    ;(options.debounceRendering || defer)(rerender)\n  }\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p\n\twhile ( (p = items.pop()) ) {\n    renderComponent(p)\n\t}\n}","import { extend } from '../util'\nimport options from '../options'\n\nconst mapping = options.mapping\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  if (typeof vnode.nodeName === 'string') {\n    var ctor = mapping[vnode.nodeName]\n    if (ctor) {\n      return hydrating || node._componentConstructor === ctor\n    }\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport { applyRef } from '../util'\nimport options from '../options'\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n  let node = isSvg\n    ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\n    : options.doc.createElement(nodeName)\n  node.normalizedNodeName = nodeName\n  return node\n}\n\nfunction parseCSSText(cssText) {\n  let cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\n  let style = {},\n    [a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\n  let cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\n  let properties = rule\n    .split(';')\n    .map(o => o.split(':').map(x => x && x.trim()))\n  for (let [property, value] of properties) style[cssToJs(property)] = value\n  return style\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n  let parentNode = node.parentNode\n  if (parentNode) parentNode.removeChild(node)\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n  if (name === 'className') name = 'class'\n\n  if (name === 'key') {\n    // ignore\n  } else if (name === 'ref') {\n    applyRef(old, null)\n    applyRef(value, node)\n  } else if (name === 'class' && !isSvg) {\n    node.className = value || ''\n  } else if (name === 'style') {\n    if (options.isWeb) {\n      if (!value || typeof value === 'string' || typeof old === 'string') {\n        node.style.cssText = value || ''\n      }\n      if (value && typeof value === 'object') {\n        if (typeof old !== 'string') {\n          for (let i in old) if (!(i in value)) node.style[i] = ''\n        }\n        for (let i in value) {\n          node.style[i] =\n            typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n              ? value[i] + 'px'\n              : value[i]\n        }\n      }\n    } else {\n      let oldJson = old,\n        currentJson = value\n      if (typeof old === 'string') {\n        oldJson = parseCSSText(old)\n      }\n      if (typeof value == 'string') {\n        currentJson = parseCSSText(value)\n      }\n\n      let result = {},\n        changed = false\n\n      if (oldJson) {\n        for (let key in oldJson) {\n          if (typeof currentJson == 'object' && !(key in currentJson)) {\n            result[key] = ''\n            changed = true\n          }\n        }\n\n        for (let ckey in currentJson) {\n          if (currentJson[ckey] !== oldJson[ckey]) {\n            result[ckey] = currentJson[ckey]\n            changed = true\n          }\n        }\n\n        if (changed) {\n          node.setStyles(result)\n        }\n      } else {\n        node.setStyles(currentJson)\n      }\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (value) node.innerHTML = value.__html || ''\n  } else if (name[0] == 'o' && name[1] == 'n') {\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\n    name = name.toLowerCase().substring(2)\n    if (value) {\n      if (!old) {\n        node.addEventListener(name, eventProxy, useCapture)\n        if (name == 'tap') {\n          node.addEventListener('touchstart', touchStart, useCapture)\n          node.addEventListener('touchend', touchEnd, useCapture)\n        }\n      }\n    } else {\n      node.removeEventListener(name, eventProxy, useCapture)\n      if (name == 'tap') {\n        node.removeEventListener('touchstart', touchStart, useCapture)\n        node.removeEventListener('touchend', touchEnd, useCapture)\n      }\n    }\n    ;(node._listeners || (node._listeners = {}))[name] = value\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n    setProperty(node, name, value == null ? '' : value)\n    if (value == null || value === false) node.removeAttribute(name)\n  } else {\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n    if (value == null || value === false) {\n      if (ns)\n        node.removeAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase()\n        )\n      else node.removeAttribute(name)\n    } else if (typeof value !== 'function') {\n      if (ns)\n        node.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase(),\n          value\n        )\n      else node.setAttribute(name, value)\n    }\n  }\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n  try {\n    node[name] = value\n  } catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n\nfunction touchStart(e) {\n  this.___touchX = e.touches[0].pageX\n  this.___touchY = e.touches[0].pageY\n  this.___scrollTop = document.body.scrollTop\n}\n\nfunction touchEnd(e) {\n  if (\n    Math.abs(e.changedTouches[0].pageX - this.___touchX) < 30 &&\n    Math.abs(e.changedTouches[0].pageY - this.___touchY) < 30 &&\n    Math.abs(document.body.scrollTop - this.___scrollTop) < 30\n  ) {\n    this.dispatchEvent(new CustomEvent('tap', { detail: e }))\n  }\n}","import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = 's' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleWithoutId(cssText) {\n  let head = document.getElementsByTagName('head')[0]\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addScopedAttrStatic(vdom, attr) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n  } \n}\n\nexport function addStyleToHead(style, attr) {\n  if (options.scopedStyle) {\n    if (!options.staticStyleMapping[attr]) {\n      addStyle(scoper(style, attr), attr)\n      options.staticStyleMapping[attr] = true\n    }\n  } else if (!options.staticStyleMapping[attr]) {\n    addStyleWithoutId(style)\n    options.staticStyleMapping[attr] = true\n  }\n}\n\nexport function scopeVdom(attr, vdom) {\n  if (typeof vdom === 'object') {\n    vdom.attributes = vdom.attributes || {}\n    vdom.attributes[attr] = ''\n    vdom.css = vdom.css || {}\n    vdom.css[attr] = ''\n    vdom.children.forEach(child => scopeVdom(attr, child))\n  }\n}\n\nexport function scopeHost(vdom, css) {\n  if (typeof vdom === 'object' && css) {\n    vdom.attributes = vdom.attributes || {}\n    for (let key in css) {\n      vdom.attributes[key] = ''\n    }\n  }\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { buildComponentFromVNode } from './component'\nimport { createNode, setAccessor } from '../dom/index'\nimport { unmountComponent } from './component'\nimport options from '../options'\nimport { applyRef } from '../util'\nimport { removeNode } from '../dom/index'\nimport { isArray } from '../util'\nimport { addStyleToHead, getCtorName } from '../style'\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n  let c\n  while ((c = mounts.pop())) {\n    if (options.afterMount) options.afterMount(c)\n    if (c.installed) c.installed()\n    if (c.constructor.css || c.css) {\n      addStyleToHead(c.constructor.css ? c.constructor.css : (typeof c.css === 'function' ? c.css() : c.css), '_s' + getCtorName(c.constructor))\n    }\n  }\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n  let ret\n\n  if (isArray(vnode)) {\n    vnode = {\n      nodeName: 'span',\n      children: vnode\n    }\n  }\n\n  ret = idiff(dom, vnode, context, mountAll, componentRoot)\n  // append the element if its a new parent\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n    if (!componentRoot) flushMounts()\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (options.mapping[vnodeName]) {\n    vnode.nodeName = options.mapping[vnodeName]\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n  if (typeof vnodeName == 'function') {\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    //ie8 error\n    try {\n      out[ATTR_KEY] = true\n    } catch (e) {}\n\n    return out\n  }\n\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n      ? false\n      : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    innerDiffNode(\n      out,\n      vchildren,\n      context,\n      mountAll,\n      hydrating || props.dangerouslySetInnerHTML != null\n    )\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (!child && min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, context, mountAll)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  let component = node._component\n  if (component) {\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\n    unmountComponent(component)\n  } else {\n    // If the node's VNode had a ref function, invoke it with null here.\n    // (this is part of the React spec, and smart for unsetting references)\n    if (node[ATTR_KEY] != null) applyRef(node[ATTR_KEY].ref, null)\n\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\n      removeNode(node)\n    }\n\n    removeChildren(node)\n  }\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n    }\n  }\n}\n","import Component from '../component'\nimport options from '../options'\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {}\n\n/** Reclaim a component for later re-use by the recycler. */\nexport function collectComponent(component) {\n  let name = component.constructor.name\n  ;(components[name] || (components[name] = [])).push(component)\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nexport function createComponent(Ctor, props, context, vnode) {\n  let list = components[Ctor.name],\n    inst\n\n  if (Ctor.prototype && Ctor.prototype.render) {\n    inst = new Ctor(props, context)\n    Component.call(inst, props, context)\n  } else {\n    inst = new Component(props, context)\n    inst.constructor = Ctor\n    inst.render = doRender\n  }\n  vnode && (inst.scopedCssAttr = vnode.css)\n\n  if (list) {\n    for (let i = list.length; i--; ) {\n      if (list[i].constructor === Ctor) {\n        inst.nextBase = list[i].nextBase\n        list.splice(i, 1)\n        break\n      }\n    }\n  }\n  return inst\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, data, context) {\n  return this.constructor(props, context)\n}\n","/* obaa 1.0.0\n * By dntzhang\n * Github: https://github.com/Tencent/omi\n * MIT Licensed.\n */\n\nvar obaa = function(target, arr, callback) {\n  var _observe = function(target, arr, callback) {\n    if (!target.$observer) target.$observer = this\n    var $observer = target.$observer\n    var eventPropArr = []\n    if (obaa.isArray(target)) {\n      if (target.length === 0) {\n        target.$observeProps = {}\n        target.$observeProps.$observerPath = '#'\n      }\n      $observer.mock(target)\n    }\n    for (var prop in target) {\n      if (target.hasOwnProperty(prop)) {\n        if (callback) {\n          if (obaa.isArray(arr) && obaa.isInArray(arr, prop)) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          } else if (obaa.isString(arr) && prop == arr) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          }\n        } else {\n          eventPropArr.push(prop)\n          $observer.watch(target, prop)\n        }\n      }\n    }\n    $observer.target = target\n    if (!$observer.propertyChangedHandler) $observer.propertyChangedHandler = []\n    var propChanged = callback ? callback : arr\n    $observer.propertyChangedHandler.push({\n      all: !callback,\n      propChanged: propChanged,\n      eventPropArr: eventPropArr\n    })\n  }\n  _observe.prototype = {\n    onPropertyChanged: function(prop, value, oldValue, target, path) {\n      if (value !== oldValue && this.propertyChangedHandler) {\n        var rootName = obaa._getRootName(prop, path)\n        for (\n          var i = 0, len = this.propertyChangedHandler.length;\n          i < len;\n          i++\n        ) {\n          var handler = this.propertyChangedHandler[i]\n          if (\n            handler.all ||\n            obaa.isInArray(handler.eventPropArr, rootName) ||\n            rootName.indexOf('Array-') === 0\n          ) {\n            handler.propChanged.call(this.target, prop, value, oldValue, path)\n          }\n        }\n      }\n      if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n        this.watch(target, prop, target.$observeProps.$observerPath)\n      }\n    },\n    mock: function(target) {\n      var self = this\n      obaa.methods.forEach(function(item) {\n        target[item] = function() {\n          var old = Array.prototype.slice.call(this, 0)\n          var result = Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n          if (new RegExp('\\\\b' + item + '\\\\b').test(obaa.triggerStr)) {\n            for (var cprop in this) {\n              if (this.hasOwnProperty(cprop) && !obaa.isFunction(this[cprop])) {\n                self.watch(this, cprop, this.$observeProps.$observerPath)\n              }\n            }\n            //todo\n            self.onPropertyChanged(\n              'Array-' + item,\n              this,\n              old,\n              this,\n              this.$observeProps.$observerPath\n            )\n          }\n          return result\n        }\n        target[\n          'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n        ] = function() {\n          return Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n        }\n      })\n    },\n    watch: function(target, prop, path) {\n      if (prop === '$observeProps' || prop === '$observer') return\n      if (obaa.isFunction(target[prop])) return\n      if (!target.$observeProps) target.$observeProps = {}\n      if (path !== undefined) {\n        target.$observeProps.$observerPath = path\n      } else {\n        target.$observeProps.$observerPath = '#'\n      }\n      var self = this\n      var currentValue = (target.$observeProps[prop] = target[prop])\n      Object.defineProperty(target, prop, {\n        get: function() {\n          return this.$observeProps[prop]\n        },\n        set: function(value) {\n          var old = this.$observeProps[prop]\n          this.$observeProps[prop] = value\n          self.onPropertyChanged(\n            prop,\n            value,\n            old,\n            this,\n            target.$observeProps.$observerPath\n          )\n        }\n      })\n      if (typeof currentValue == 'object') {\n        if (obaa.isArray(currentValue)) {\n          this.mock(currentValue)\n          if (currentValue.length === 0) {\n            if (!currentValue.$observeProps) currentValue.$observeProps = {}\n            if (path !== undefined) {\n              currentValue.$observeProps.$observerPath = path\n            } else {\n              currentValue.$observeProps.$observerPath = '#'\n            }\n          }\n        }\n        for (var cprop in currentValue) {\n          if (currentValue.hasOwnProperty(cprop)) {\n            this.watch(\n              currentValue,\n              cprop,\n              target.$observeProps.$observerPath + '-' + prop\n            )\n          }\n        }\n      }\n    }\n  }\n  return new _observe(target, arr, callback)\n}\n\nobaa.methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\nobaa.triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nobaa.isArray = function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nobaa.isString = function(obj) {\n  return typeof obj === 'string'\n}\n\nobaa.isInArray = function(arr, item) {\n  for (var i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nobaa.isFunction = function(obj) {\n  return Object.prototype.toString.call(obj) == '[object Function]'\n}\n\nobaa._getRootName = function(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n}\n\nobaa.set = function(obj, prop, value, exec) {\n  if (!exec) {\n    obj[prop] = value\n  }\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n  if (exec) {\n    obj[prop] = value\n  }\n}\n\nArray.prototype.size = function(length) {\n  this.length = length\n}\n\nexport default obaa\n","const callbacks = []\nconst nextTickCallback = []\n\nexport function tick(fn, scope) {\n  callbacks.push({ fn, scope })\n}\n\nexport function fireTick() {\n  callbacks.forEach(item => {\n    item.fn.call(item.scope)\n  })\n\n  nextTickCallback.forEach(nextItem => {\n    nextItem.fn.call(nextItem.scope)\n  })\n  nextTickCallback.length = 0\n}\n\nexport function nextTick(fn, scope) {\n  nextTickCallback.push({ fn, scope })\n}\n","import obaa from './obaa'\nimport { fireTick } from './tick'\n\nexport function proxyUpdate(ele) {\n  let timeout = null\n  obaa(ele.data, () => {\n    if (ele._willUpdate) {\n      return\n    }\n    if (ele.constructor.mergeUpdate) {\n      clearTimeout(timeout)\n\n      timeout = setTimeout(() => {\n        ele.update()\n        fireTick()\n      }, 0)\n    } else {\n      ele.update()\n      fireTick()\n    }\n  })\n}\n","import {\n  SYNC_RENDER,\n  NO_RENDER,\n  FORCE_RENDER,\n  ASYNC_RENDER,\n  ATTR_KEY\n} from '../constants'\nimport options from '../options'\nimport { extend, applyRef } from '../util'\nimport { enqueueRender } from '../render-queue'\nimport { getNodeProps } from './index'\nimport {\n  diff,\n  mounts,\n  diffLevel,\n  flushMounts,\n  recollectNodeTree,\n  removeChildren\n} from './diff'\nimport { createComponent, collectComponent } from './component-recycler'\nimport { removeNode } from '../dom/index'\nimport {\n  addScopedAttrStatic,\n  getCtorName,\n  scopeHost\n} from '../style'\nimport { proxyUpdate } from '../observe'\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context, mountAll) {\n  if (component._disable) return\n  component._disable = true\n\n  if ((component.__ref = props.ref)) delete props.ref\n  if ((component.__key = props.key)) delete props.key\n\n  if (!component.base || mountAll) {\n    if (component.beforeInstall) component.beforeInstall()\n    if (component.install) component.install()\n    if (component.constructor.observe) {\n      proxyUpdate(component)\n    }\n  } else if (component.receiveProps) {\n    component.receiveProps(props, component.data, component.props)\n  }\n\n  if (context && context !== component.context) {\n    if (!component.prevContext) component.prevContext = component.context\n    component.context = context\n  }\n\n  if (!component.prevProps) component.prevProps = component.props\n  component.props = props\n\n  component._disable = false\n\n  if (opts !== NO_RENDER) {\n    if (\n      opts === SYNC_RENDER ||\n      options.syncComponentUpdates !== false ||\n      !component.base\n    ) {\n      renderComponent(component, SYNC_RENDER, mountAll)\n    } else {\n      enqueueRender(component)\n    }\n  }\n\n  applyRef(component.__ref, component)\n}\n\nfunction shallowComparison(old, attrs) {\n  let name\n\n  for (name in old) {\n    if (attrs[name] == null && old[name] != null) {\n      return true\n    }\n  }\n\n  if (old.children.length > 0 || attrs.children.length > 0) {\n    return true\n  }\n\n  for (name in attrs) {\n    if (name != 'children') {\n      let type = typeof attrs[name]\n      if (type == 'function' || type == 'object') {\n        return true\n      } else if (attrs[name] != old[name]) {\n        return true\n      }\n    }\n  }\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll, isChild) {\n  if (component._disable) return\n\n  let props = component.props,\n    data = component.data,\n    context = component.context,\n    previousProps = component.prevProps || props,\n    previousState = component.prevState || data,\n    previousContext = component.prevContext || context,\n    isUpdate = component.base,\n    nextBase = component.nextBase,\n    initialBase = isUpdate || nextBase,\n    initialChildComponent = component._component,\n    skip = false,\n    rendered,\n    inst,\n    cbase\n\n  // if updating\n  if (isUpdate) {\n    component.props = previousProps\n    component.data = previousState\n    component.context = previousContext\n    if (component.store || opts == FORCE_RENDER || shallowComparison(previousProps, props)) {\n      skip = false\n      if (component.beforeUpdate) {\n        component.beforeUpdate(props, data, context)\n      }\n    } else {\n      skip = true\n    }\n    component.props = props\n    component.data = data\n    component.context = context\n  }\n\n  component.prevProps = component.prevState = component.prevContext = component.nextBase = null\n\n  if (!skip) {\n    component.beforeRender && component.beforeRender()\n    rendered = component.render(props, data, context)\n\n    //don't rerender\n    if (component.constructor.css || component.css) {\n      addScopedAttrStatic(\n        rendered,\n        '_s' + getCtorName(component.constructor)\n      )\n    }\n\n    scopeHost(rendered, component.scopedCssAttr)\n\n    // context to pass to the child, can be updated via (grand-)parent component\n    if (component.getChildContext) {\n      context = extend(extend({}, context), component.getChildContext())\n    }\n\n    let childComponent = rendered && rendered.nodeName,\n      toUnmount,\n      base,\n      ctor = options.mapping[childComponent]\n\n    if (ctor) {\n      // set up high order component link\n\n      let childProps = getNodeProps(rendered)\n      inst = initialChildComponent\n\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\n        setComponentProps(inst, childProps, SYNC_RENDER, context, false)\n      } else {\n        toUnmount = inst\n\n        component._component = inst = createComponent(ctor, childProps, context)\n        inst.nextBase = inst.nextBase || nextBase\n        inst._parentComponent = component\n        setComponentProps(inst, childProps, NO_RENDER, context, false)\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\n      }\n\n      base = inst.base\n    } else {\n      cbase = initialBase\n\n      // destroy high order component link\n      toUnmount = initialChildComponent\n      if (toUnmount) {\n        cbase = component._component = null\n      }\n\n      if (initialBase || opts === SYNC_RENDER) {\n        if (cbase) cbase._component = null\n        base = diff(\n          cbase,\n          rendered,\n          context,\n          mountAll || !isUpdate,\n          initialBase && initialBase.parentNode,\n          true\n        )\n      }\n    }\n\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\n      let baseParent = initialBase.parentNode\n      if (baseParent && base !== baseParent) {\n        baseParent.replaceChild(base, initialBase)\n\n        if (!toUnmount) {\n          initialBase._component = null\n          recollectNodeTree(initialBase, false)\n        }\n      }\n    }\n\n    if (toUnmount) {\n      unmountComponent(toUnmount)\n    }\n\n    component.base = base\n    if (base && !isChild) {\n      let componentRef = component,\n        t = component\n      while ((t = t._parentComponent)) {\n        ;(componentRef = t).base = base\n      }\n      base._component = componentRef\n      base._componentConstructor = componentRef.constructor\n    }\n  }\n\n  if (!isUpdate || mountAll) {\n    mounts.unshift(component)\n  } else if (!skip) {\n    // Ensure that pending componentDidMount() hooks of child components\n    // are called before the componentDidUpdate() hook in the parent.\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n    // flushMounts();\n\n    if (component.afterUpdate) {\n      //deprecated\n      component.afterUpdate(previousProps, previousState, previousContext)\n    }\n    if (component.updated) {\n      component.updated(previousProps, previousState, previousContext)\n    }\n    if (options.afterUpdate) options.afterUpdate(component)\n  }\n\n  if (component._renderCallbacks != null) {\n    while (component._renderCallbacks.length)\n      component._renderCallbacks.pop().call(component)\n  }\n\n  if (!diffLevel && !isChild) flushMounts()\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n  let c = dom && dom._component,\n    originalComponent = c,\n    oldDom = dom,\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n    isOwner = isDirectOwner,\n    props = getNodeProps(vnode)\n  while (c && !isOwner && (c = c._parentComponent)) {\n    isOwner = c.constructor === vnode.nodeName\n  }\n\n  if (c && isOwner && (!mountAll || c._component)) {\n    setComponentProps(c, props, ASYNC_RENDER, context, mountAll)\n    dom = c.base\n  } else {\n    if (originalComponent && !isDirectOwner) {\n      unmountComponent(originalComponent)\n      dom = oldDom = null\n    }\n\n    c = createComponent(vnode.nodeName, props, context, vnode)\n    if (dom && !c.nextBase) {\n      c.nextBase = dom\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n      oldDom = null\n    }\n    setComponentProps(c, props, SYNC_RENDER, context, mountAll)\n    dom = c.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      recollectNodeTree(oldDom, false)\n    }\n  }\n\n  return dom\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component) {\n  if (options.beforeUnmount) options.beforeUnmount(component)\n\n  let base = component.base\n\n  component._disable = true\n\n  if (component.uninstall) component.uninstall()\n\n  component.base = null\n\n  // recursively tear down & recollect high-order component children:\n  let inner = component._component\n  if (inner) {\n    unmountComponent(inner)\n  } else if (base) {\n    if (base[ATTR_KEY] != null) applyRef(base[ATTR_KEY].ref, null)\n\n    component.nextBase = base\n\n    removeNode(base)\n    collectComponent(component)\n\n    removeChildren(base)\n  }\n\n  applyRef(component.__ref, null)\n}\n","import { diff } from './vdom/diff'\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {object} [store]\n *\t@public\n */\nexport function render(vnode, parent, store, empty, merge) {\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n\n  if (empty) {\n    while (parent.firstChild) {\n      parent.removeChild(parent.firstChild)\n    }\n  }\n\n  if (merge) {\n    merge =\n      typeof merge === 'string'\n        ? document.querySelector(merge)\n        : merge\n  }\n\n  return diff(merge, vnode, store, false, parent, false)\n}\n","import { FORCE_RENDER } from './constants'\nimport { renderComponent } from './vdom/component'\nimport options from './options'\nimport { nProps, assign } from './util'\n\nlet id = 0\n\nexport default class Component {\n  static is = 'WeElement'\n\n  constructor(props, store) {\n    this.props = assign(\n      nProps(this.constructor.props),\n      this.constructor.defaultProps,\n      props\n    )\n    this.elementId = id++\n    this.data = this.constructor.data || this.data || {}\n\n    this._preCss = null\n\n    this.store = store\n  }\n\n  update(callback) {\n    this._willUpdate = true\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    renderComponent(this, FORCE_RENDER)\n    if (options.componentChange) options.componentChange(this, this.base)\n    this._willUpdate = false\n  }\n\n  fire(type, data) {\n    Object.keys(this.props).every(key => {\n      if ('on' + type.toLowerCase() === key.toLowerCase()) {\n        this.props[key]({ detail: data })\n        return false\n      }\n      return true\n    })\n  }\n\n  render() {}\n}\n","import options from './options'\n\nexport function define(name, ctor) {\n  options.mapping[name] = ctor\n}\n","export function rpx(str) {\n  return str.replace(/([1-9]\\d*|0)(\\.\\d*)*rpx/g, (a, b) => {\n    return (window.innerWidth * Number(b)) / 750 + 'px'\n  })\n}\n","/**\n * classNames based on https://github.com/JedWatson/classnames\n * by Jed Watson\n * Licensed under the MIT License\n * https://github.com/JedWatson/classnames/blob/master/LICENSE\n * modified by dntzhang\n */\n\nvar hasOwn = {}.hasOwnProperty\n\nexport function classNames() {\n  var classes = []\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (!arg) continue\n\n    var argType = typeof arg\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg)\n    } else if (Array.isArray(arg) && arg.length) {\n      var inner = classNames.apply(null, arg)\n      if (inner) {\n        classes.push(inner)\n      }\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n\nexport function extractClass() {\n  const [props, ...args] = Array.prototype.slice.call(arguments, 0)\n  if (props) {\n    if (props.class) {\n      args.unshift(props.class)\n      delete props.class\n    } else if (props.className) {\n      args.unshift(props.className)\n      delete props.className\n    }\n  }\n  if (args.length > 0) {\n    return { class: classNames.apply(null, args) }\n  }\n}\n","/**\n * preact-render-to-string based on preact-render-to-string\n * by Jason Miller\n * Licensed under the MIT License\n * https://github.com/developit/preact-render-to-string\n *\n * modified by dntzhang\n */\n\nimport options from './options'\n\nimport {\n  addScopedAttrStatic,\n  getCtorName,\n  scopeHost,\n  scoper\n} from './style'\n\n\nconst encodeEntities = s => String(s)\n  .replace(/&/g, '&amp;')\n  .replace(/</g, '&lt;')\n  .replace(/>/g, '&gt;')\n  .replace(/\"/g, '&quot;');\n\nconst indent = (s, char) => String(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\n\nconst mapping = options.mapping\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\n\nconst isLargeString = (s, length, ignoreLines) => (String(s).length > (length || 40) || (!ignoreLines && String(s).indexOf('\\n') !== -1) || String(s).indexOf('<') !== -1);\n\nconst JS_TO_CSS = {};\n\n// Convert an Object style to a CSSText string\nfunction styleObjToCss(s) {\n  let str = '';\n  for (let prop in s) {\n    let val = s[prop];\n    if (val != null) {\n      if (str) str += ' ';\n      // str += jsToCss(prop);\n      str += JS_TO_CSS[prop] || (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g, '-$1').toLowerCase());\n      str += ': ';\n      str += val;\n      if (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\n        str += 'px';\n      }\n      str += ';';\n    }\n  }\n  return str || undefined;\n}\n\n/** The default export is an alias of `render()`. */\nexport function renderToString(vnode, opts, store, isSvgMode, css) {\n  if (vnode == null || typeof vnode === 'boolean') {\n    return '';\n  }\n\n  let nodeName = vnode.nodeName,\n    attributes = vnode.attributes,\n    isComponent = false;\n  store = store || {};\n  opts = Object.assign({\n    scopedCSS: true\n  },opts)\n\n  let pretty = true && opts.pretty,\n    indentChar = pretty && typeof pretty === 'string' ? pretty : '\\t';\n\n  // #text nodes\n  if (typeof vnode !== 'object' && !nodeName) {\n    return encodeEntities(vnode);\n  }\n\n  // components\n  const ctor = mapping[nodeName]\n  if (ctor) {\n    isComponent = true;\n\n    let props = getNodeProps(vnode),\n      rendered;\n    // class-based components\n    let c = new ctor(props, store);\n    // turn off stateful re-rendering:\n    c._disable = c.__x = true;\n    c.props = props;\n    c.store = store;\n    if (c.install) c.install();\n    if (c.beforeRender) c.beforeRender();\n    rendered = c.render(c.props, c.data, c.store);\n    let tempCss \n    if(opts.scopedCSS){\n\n      if (c.constructor.css || c.css) {\n\n        const cssStr = c.constructor.css ? c.constructor.css : (typeof c.css === 'function' ? c.css() : c.css)\n        const cssAttr = '_s' + getCtorName(c.constructor)\n\n        tempCss = `<style type=\"text/css\" id=\"${cssAttr}\">${scoper(cssStr, cssAttr)}</style>`\n\n        addScopedAttrStatic(\n          rendered,\n          '_s' + getCtorName(c.constructor)\n        )\n      }\n    \n      c.scopedCSSAttr = vnode.css\n      scopeHost(rendered, c.scopedCSSAttr)\n    }\n\n    return renderToString(rendered, opts, store, false, tempCss);\n  }\n\n\n  // render JSX to HTML\n  let s = '', html;\n\n  if (attributes) {\n    let attrs = Object.keys(attributes);\n\n    // allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\n    if (opts && opts.sortAttributes === true) attrs.sort();\n\n    for (let i = 0; i < attrs.length; i++) {\n      let name = attrs[i],\n        v = attributes[name];\n      if (name === 'children') continue;\n\n      if (name.match(/[\\s\\n\\\\/='\"\\0<>]/)) continue;\n\n      if (!(opts && opts.allAttributes) && (name === 'key' || name === 'ref')) continue;\n\n      if (name === 'className') {\n        if (attributes.class) continue;\n        name = 'class';\n      }\n      else if (isSvgMode && name.match(/^xlink:?./)) {\n        name = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n      }\n\n      if (name === 'style' && v && typeof v === 'object') {\n        v = styleObjToCss(v);\n      }\n\n      let hooked = opts.attributeHook && opts.attributeHook(name, v, store, opts, isComponent);\n      if (hooked || hooked === '') {\n        s += hooked;\n        continue;\n      }\n\n      if (name === 'dangerouslySetInnerHTML') {\n        html = v && v.__html;\n      }\n      else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n        if (v === true || v === '') {\n          v = name;\n          // in non-xml mode, allow boolean attributes\n          if (!opts || !opts.xml) {\n            s += ' ' + name;\n            continue;\n          }\n        }\n        s += ` ${name}=\"${encodeEntities(v)}\"`;\n      }\n    }\n  }\n\n  // account for >1 multiline attribute\n  if (pretty) {\n    let sub = s.replace(/^\\n\\s*/, ' ');\n    if (sub !== s && !~sub.indexOf('\\n')) s = sub;\n    else if (pretty && ~s.indexOf('\\n')) s += '\\n';\n  }\n\n  s = `<${nodeName}${s}>`;\n  if (String(nodeName).match(/[\\s\\n\\\\/='\"\\0<>]/)) throw s;\n\n  let isVoid = String(nodeName).match(VOID_ELEMENTS);\n  if (isVoid) s = s.replace(/>$/, ' />');\n\n  let pieces = [];\n  if (html) {\n    // if multiline, indent.\n    if (pretty && isLargeString(html)) {\n      html = '\\n' + indentChar + indent(html, indentChar);\n    }\n    s += html;\n  }\n  else if (vnode.children) {\n    let hasLarge = pretty && ~s.indexOf('\\n');\n    for (let i = 0; i < vnode.children.length; i++) {\n      let child = vnode.children[i];\n      if (child != null && child !== false) {\n        let childSvgMode = nodeName === 'svg' ? true : nodeName === 'foreignObject' ? false : isSvgMode,\n          ret = renderToString(child, opts, store, childSvgMode);\n        if (pretty && !hasLarge && isLargeString(ret)) hasLarge = true;\n        if (ret) pieces.push(ret);\n      }\n    }\n    if (pretty && hasLarge) {\n      for (let i = pieces.length; i--;) {\n        pieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar);\n      }\n    }\n  }\n\n  if (pieces.length) {\n    s += pieces.join('');\n  }\n  else if (opts && opts.xml) {\n    return s.substring(0, s.length - 1) + ' />';\n  }\n\n  if (!isVoid) {\n    if (pretty && ~s.indexOf('\\n')) s += '\\n';\n    s += `</${nodeName}>`;\n  }\n\n  if(css) return css + s;\n  return s;\n}\n\nfunction assign(obj, props) {\n  for (let i in props) obj[i] = props[i];\n  return obj;\n}\n\nfunction getNodeProps(vnode) {\n  let props = assign({}, vnode.attributes);\n  props.children = vnode.children;\n\n  let defaultProps = vnode.nodeName.defaultProps;\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i];\n      }\n    }\n  }\n\n  return props;\n}","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    if (typeof self !== 'undefined') {\n      return self\n    } else if (typeof window !== 'undefined') {\n      return window\n    } else if (typeof global !== 'undefined') {\n      return global\n    }\n    return (function() {\n      return this\n    })()\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  scopedStyle: true,\n  mapping: {},\n  isWeb: true,\n  staticStyleMapping: {},\n  doc: typeof document === 'object' ? document : null,\n  root: getGlobal(),\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\n  styleCache: []\n  //componentChange(component, element) { },\n  /** If `true`, `prop` changes trigger synchronous component updates.\n   *\t@name syncComponentUpdates\n   *\t@type Boolean\n   *\t@default true\n   */\n  //syncComponentUpdates: true,\n\n  /** Processes all created VNodes.\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n   */\n  //vnode(vnode) { }\n\n  /** Hook invoked after a component is mounted. */\n  //afterMount(component) { },\n\n  /** Hook invoked after the DOM is updated with a component's latest render. */\n  //afterUpdate(component) { }\n\n  /** Hook invoked immediately before a component is unmounted. */\n  // beforeUnmount(component) { }\n}\n","import Component from './component'\n\nexport default class ModelView extends Component {\n  static observe = true\n\n  static mergeUpdate = true\n\n  beforeInstall() {\n    this.data = this.vm.data\n  }\n}\n","import { h, h as createElement } from './h'\nimport { cloneElement } from './clone-element'\nimport Component from './component'\nimport { render } from './render'\nimport { rerender } from './render-queue'\nimport options from './options'\nimport { define } from './define'\nimport { rpx } from './rpx'\nimport ModelView from './model-view'\nimport { classNames, extractClass } from './class'\nimport { getHost } from './get-host'\nimport { renderToString } from './render-to-string'\n\nconst WeElement = Component\nconst defineElement = define\nfunction createRef() {\n  return {}\n}\n\noptions.root.Omi = {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString\n}\noptions.root.omi = options.root.Omi\noptions.root.Omi.version = 'omio-1.3.8'\n\nexport default {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString\n}\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString\n}\n"]}